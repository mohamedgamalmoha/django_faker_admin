name: Deploy to TestPyPI

on:
  release:
    types: [created]
  workflow_run:
    workflows: ["run_tets"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'release') || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools build twine
          
      - name: Check version matching
        if: github.event_name == 'release'
        run: |
          # Extract version from package
          PACKAGE_VERSION=$(python setup.py --version)
          # Extract tag name without 'v' prefix if present
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          TAG_VERSION=${TAG_VERSION#v}
          
          echo "Package version: $PACKAGE_VERSION"
          echo "Tag version: $TAG_VERSION"
          
          # Check if versions match
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Package version ($PACKAGE_VERSION) does not match release tag ($TAG_VERSION)"
            exit 1
          fi  
          
      - name: Build package
        run: python -m build
        
      - name: Verify package
        run: twine check dist/*
        
      - name: Deploy to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true
